---
interface Props {
   href: string;
   filename?:string;
   variant?: 'primary' | 'secondary' | 'ghost' | 'outline';
   size?: 'sm' | 'md' |  'lg';
   class?: string;
}

const{
    href,
    filename,
    variant ='primary',
    size='md',
    class: className,
  ...rest
    }=Astro.props as Props;

const base = 'inline-flex items-center justify-center rounded-lg font-semibold starwind-transition-colors no-underline';
const sizes: Record<string, string> = {
  sm: 'px-3 py-2 text-sm',
  md: 'px-4 py-2.5 text-base',
  lg: 'px-5 py-3 text-lg',
};

const variants: Record<string, string> = {
  primary: 'text-white !text-white hover:!text-white focus:!text-white active:!text-white bg-[var(--primary)] hover:opacity-90 shadow-sm',
  secondary: 'text-[var(--accent)] border border-[var(--accent)] bg-transparent hover:bg-[color:var(--color-accent-bg)]',
  ghost: 'text-[color:var(--color-text-secondary)] bg-transparent hover:bg-[var(--accent)]/10',
  outline: 'text-foreground border border-[var(--border)] bg-transparent hover:bg-[color:var(--color-bg-secondary)]',
};

const classes = [base, sizes[size], variants[variant], className].filter(Boolean).join(' ');
---

<a
  href={href}
  class={classes}
  download={filename ? filename : ''}
  {...rest}
>
  <slot />
</a>